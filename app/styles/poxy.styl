/////////////////////////////////
// GRID SETTINGS
/////////////////////////////////

$font-size = 18 // Your base font-size in pixels (18 seems to work across all browsers)
$em = $font-size / 1rem	// Shorthand for outputting ems
$column = 48	// The column-width of your grid in pixels
$gutter = 24 // The width of the horizontal gutter
$gutter-y = 24 // The height of the vertical gutter
$max-copy-width = 20 // The widest the site can get

// Zone Gutters
$gx-A = 36
$gy-A = 36
$gs-A = 2

$gx-B = 24
$gy-B = 24
$gs-B = 2

$gx-C = 24
$gy-C = 24
$gs-C = 2

$gx-D = 12
$gy-D = 12
$gs-D = .5

$gx-E = 12
$gy-E = 12
$gs-E = .25


/////////////////////////////////
// GRID Ratio Settings (Denominator)
// Zone Numerators array ( 1/ $ratio)
/////////////////////////////////

// Development - Include all Ratios

$ratio-range = (1..20)

$numerators-A = (A 1) (A 2) (A 3) (A 4)
$numerators-B = (B 1) (B 2) (B 3)
$numerators-C = (C 1) (C 2) (C 3)
$numerators-D = (D 1) (D 2) (D 3)
$numerators-E = (E 1) (E 2) (E 3)

/////////////////////////////////
// Dist - Include only the ratios you need
// N keeps numerators working as an array
/////////////////////////////////

// $ratio-range = 2 4 6 8 16 18
//
// $numerators-A = (N 1) (A 1) (A 2)
// $numerators-B = (N 1) (B 1)
// $numerators-C = (N 1) (C 1)
// $numerators-D = (N 1) (D 1)
// $numerators-E = (N 1) (E 1)


/////////////////////////////////
// ZONE/BREAKPOINT SETTINGS
/////////////////////////////////

$zone-a-max = $max-copy-width
$zone-a-min = 15

$zone-b-max = 14
$zone-b-min = 12

$zone-c-max = 11
$zone-c-min = 10

$zone-d-max = 9
$zone-d-min = 8

$zone-e-max = 7
$zone-e-min = 4

// More zones can be added (who knows what will come out in 5 years)
// $zone-f-min = 6
// $zone-f-min = 4

// $zone-g-min = 6
// $zone-g-min = 4


//////////////////////////////////////////////////////////////////////
// FRAMLESS GRID SETTINGS - Joni Korpi - http://framelessgrid.com/
/////////////////////////////////////////////////////////////////////
$cols1 = (1 * ($column + $gutter) - $gutter) / $em

// Virtical & Horizontal Gutter Size
$gx = (($gutter) / $em)rem
$gy = (($gutter-y) / $em)rem

// Zone Gutters (rem)
$gxA = (($gx-A) / $em)rem
$gyA = (($gx-A) / $em)rem
$gxB = (($gx-B) / $em)rem
$gyB = (($gx-B) / $em)rem
$gxC = (($gx-C) / $em)rem
$gyC = (($gx-C) / $em)rem
$gxD = (($gx-D) / $em)rem
$gyD = (($gx-D) / $em)rem
$gxE = (($gx-E) / $em)rem
$gyE = (($gx-E) / $em)rem

//spacer/Shiv - margin rythem
$spacer = $gx
$sx = $gx
$sy = $gy


$s1 = ($spacer / 1)
$s2 = ($spacer / 2)
$s3 = ($spacer / 3)
$s4 = ($spacer / 4)
$s5 = ($spacer / 5)
$s6 = ($spacer / 6)
$s7 = ($spacer / 7)
$s8 = ($spacer / 8)
$s9 = ($spacer / 9)
$s10 = ($spacer / 10)

//////////////////////////////////////////////////////////////////////
// ZONE Breakpoints
/////////////////////////////////////////////////////////////////////

zone($zone)
  // if $zone == mobile-menu
  //   @media (min-width: ($zone-e-min * ($column + $gutter) - $gutter) / $em) and (max-width: ($mobile-max * ($column + $gutter) - $gutter) / $em)
  //     {block}

  // ZONE E
  if $zone == E
    @media (min-width: (($zone-e-min * ($column + $gutter) - $gutter) / $em)rem) and (max-width: (($zone-d-min * ($column + $gutter) - $gutter) / $em)rem)
      {block}

  if $zone == D
    @media (min-width: (($zone-d-min * ($column + $gutter) - $gutter) / $em)rem) and (max-width: (($zone-c-min * ($column + $gutter) - $gutter) / $em)rem)
      {block}

  if $zone == C
    @media (min-width: (($zone-c-min * ($column + $gutter) - $gutter) / $em)rem) and (max-width: (($zone-b-min * ($column + $gutter) - $gutter) / $em)rem)
      {block}

  if $zone == B
    @media (min-width: (($zone-b-min * ($column + $gutter) - $gutter) / $em)rem) and (max-width: (($zone-a-min * ($column + $gutter) - $gutter) / $em)rem)
      {block}

  if $zone == A
    @media (min-width: (($zone-a-min * ($column + $gutter) - $gutter) / $em)rem)
      {block}

  // else
  //   @media (min-width: $zone)
  //     {block}


/////////////////////////////////
// Functions
/////////////////////////////////

// Copy Width - Ratios are based on this width

poxy-copy-width($zone-min, $zone-max, $gx, $gy, $gs)
  for i in ($zone-min..$zone-max)
    .cw, .pcw, .qcw
      @media (min-width: ((i * ($column + $gx) - $gx) / $em)rem)
          width: (((((i - ($gs)) * ($column + $gx) - $gx) / $em) + (($gx) / $em))rem)

          figure
            margin-left (($gx) / $em)rem
            margin-bottom (($gy) / $em)rem

//
poxy-scale($i, $scale, $x1, $x2, $zone-gutter, $gs)
  // if $i <= $zone-e-max
  //   return ((((($i - $gs)*$x1)/$x2) * ($column + $zone-gutter) - $zone-gutter) / $em)rem
  //
  // if $i <= $zone-d-max
  //   return ((((($i - $gs)*$x1)/$x2) * ($column + $zone-gutter) - $zone-gutter) / $em)rem
  //
  // else
    return ((((($i - $gs)*$x1)/$x2) * ($column + $zone-gutter) - $zone-gutter) / $em)rem

//  Box Width
poxy-zone-width($zone, $zone-class-lower, $zone-min, $zone-max, $numerators, $zone-gutter, $gs)
  for $i in ($zone-min..$zone-max)
    for $size in $numerators
      if $size[0] == $zone
        for $i in ($zone-min..$zone-max)
          @media (min-width:(($i * ($column + $zone-gutter) - $zone-gutter) / $em)rem)
            for $i2 in $ratio-range
              \[class\*\={$zone-class-lower}{$size[1]}{$i2}\]
                 width poxy-scale($i, $size[0], $size[1], $i2, $zone-gutter, $gs)

// Box Height
poxy-zone-height($zone, $zone-class-lower, $zone-min, $zone-max, $numerators, $zone-gutter, $gs)
  for $i in ($zone-min..$zone-max)
    for $size in $numerators
      if $size[0] == $zone
        for $i in ($zone-min..$zone-max)
          @media (min-width:(($i * ($column + $zone-gutter) - $zone-gutter) / $em)rem)
            for $i2 in $ratio-range
              \[class\*\={$zone-class-lower}\_{$size[1]}{$i2}\]
                 height poxy-scale($i, $size[0], $size[1], $i2, $zone-gutter, $gs)




//////////////////////////////////////////////////////
// Reset
//////////////////////////////////////////////////////
html, body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, a, blockquote, pre, abbr, address, cite, code, del, dfn, em, img, ins, kbd, q, samp, small, strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, figure, footer, header, hgroup, nav, section, menu, time, mark, audio, video, canvas
  margin 0
  padding 0
  border 0

*
  box-sizing border-box





// Get custom zone copy widths based on gutter settings
poxy-copy-width($zone-e-min, $zone-e-max, $gx-E, $gy-E, $gs-E)
poxy-copy-width($zone-d-min, $zone-d-max, $gx-D, $gy-D, $gs-D)
poxy-copy-width($zone-c-min, $zone-c-max, $gx-C, $gy-C, $gs-C)
poxy-copy-width($zone-b-min, $zone-b-max, $gx-B, $gy-B, $gs-B)
poxy-copy-width($zone-a-min, $zone-a-max, $gx-A, $gy-A, $gs-A)


// Default
// .cw, .pcw, .qcw
//   for i in (8..$max-copy-width)
//     @media (min-width: ((i * ($column + $gutter) - $gutter) / $em)rem)
//         width: (((((i - 2) * ($column + $gutter) - $gutter) / $em) + $gx)rem)
//
// .cw > *
//   for i in (1..$max-copy-width)
//     @media (min-width: ((i * ($column + $gutter) - $gutter) / $em)rem)
//         width: (((((i - 2) * ($column + $gutter) - $gutter) / $em))rem)

.cw0 > *
  margin-left 0

// copy width
.qcw
  margin 0 0
  float right

.pcw
  margin 0 0
  float left



//////////////////////////////////////////////////////
// Container(div) Ratio Sizes
//////////////////////////////////////////////////////
// Get Width Classes
poxy-zone-width(E, e, $zone-e-min, $zone-e-max, $numerators-E, $gx-E, $gs-E)
poxy-zone-width(D, d, $zone-d-min, $zone-d-max, $numerators-D, $gx-D, $gs-D)
poxy-zone-width(C, c, $zone-c-min, $zone-c-max, $numerators-C, $gx-C, $gs-C)
poxy-zone-width(B, b, $zone-b-min, $zone-b-max, $numerators-B, $gx-B, $gs-B)
poxy-zone-width(A, a, $zone-a-min, $zone-a-max, $numerators-A, $gx-A, $gs-A)

// Get Hight Classes
poxy-zone-height(E, e, $zone-e-min, $zone-e-max, $numerators-E, $gx-E, $gs-E)
poxy-zone-height(D, d, $zone-d-min, $zone-d-max, $numerators-D, $gx-D, $gs-D)
poxy-zone-height(C, c, $zone-c-min, $zone-c-max, $numerators-C, $gx-C, $gs-C)
poxy-zone-height(B, b, $zone-b-min, $zone-b-max, $numerators-B, $gx-B, $gs-B)
poxy-zone-height(A, a, $zone-a-min, $zone-a-max, $numerators-A, $gx-A, $gs-A)


//////////////////////////////////////////////////////
// Section negative margin Offset
////////////////////////////////////////////////////
section
  @media (min-width: (($zone-e-min * ($column + $gutter) - $gutter) / $em)rem) and (max-width: (($zone-d-min * ($column + $gutter) - $gutter) / $em)rem)
    margin-left: -($gxE/2)
    margin-top: 0

    &:first-child
      margin-top ($gyE/2) !important

    &:after
      margin-top: -($gyE) !important

    .cw0
      margin-bottom: ($gyE) !important

  @media (min-width: (($zone-d-min * ($column + $gutter) - $gutter) / $em)rem) and (max-width: (($zone-c-min * ($column + $gutter) - $gutter) / $em)rem)
    margin-left: -($gxD/2)
    margin-top: -($gyA/2)

  @media (min-width: (($zone-c-min * ($column + $gutter) - $gutter) / $em)rem) and (max-width: (($zone-b-min * ($column + $gutter) - $gutter) / $em)rem)
    margin-left: -($gxC/2)
    margin-top: -($gyC/2)

    &:first-child
      margin-top 0 !important

    &:after
      margin-top: -($gyC) !important

  @media (min-width: (($zone-b-min * ($column + $gutter) - $gutter) / $em)rem) and (max-width: (($zone-a-min * ($column + $gutter) - $gutter) / $em)rem)
      margin-left: -($gxB/2)
      margin-top: 0

      &:first-child
        margin-top ($gyB/2) !important

      &:after
        margin-top: -($gyB) !important

      .cw0
        margin-bottom: ($gyB) !important



  @media (min-width: (($zone-a-min * ($column + $gutter) - $gutter) / $em)rem)
    margin-left: -($gxA/2)
    margin-top: 0

    &:first-child
      margin-top ($gyA/2) !important

    &:after
      margin-top: -($gyA) !important

    .cw0
      margin-bottom: ($gyA) !important







//////////////////////////////////////////////////////
// POXY
////////////////////////////////////////////////////

// fixed
.pfxy
  position fixed
  height 100%
  top 0
  left 0

.bfxy
  position fixed
  bottom 0
  left 0


// Float
.poxy
  float left

.qoxy
  float right

.doxy


.boxy

[class*=poxa11]
[class*=paxa11]
  width 100% !important

[class*=paxa12]
  width 50% !important

[class*=paxa14]
  width 25% !important



[class*=paxa],
[class*=paxya]
  position absolute !important
  left 0

[class*=qaxya]
  position absolute !important
  right 0

// Absolute
.paxy, .pa, .qaxy, .baxy, .daxy
  position absolute !important

.paxy
  left 0

.qa
  right 0

.qoxy
  right 0

.daxy
  bottom 0

.baxy
  bottom 0


.pax





//////////////////////////////////////////////////////
// DEV
////////////////////////////////////////////////////
.red
  background red


//////////////////////////////////////////////////////
// COMMON
////////////////////////////////////////////////////
.cb
  clear both
  display block
  font-size 0
  height 0
  line-height 0
  width 100%

.hide
  display none



//////////////////////////////////////////////////////
// CORE
////////////////////////////////////////////////////

.container
  font-size: 100%

section
  display block
  float left
  overflow hidden
  padding 0
  width 100%
  //margin-top -($gy)
  // &:first-child
  //   margin-top $gyA !important


.site-width,
.sw
  display block
  float left
  margin 0 auto
  width: 100%
  position relative
  //margin-left: -($gxA/2)

.copy-width,
.cw
  //display inline-block
  position relative
  background #666
  margin 0 auto

.cw0
  float left

.copy-inside
  display inline-block

section:before,
section:after
  //margin 0 auto
  //height $gy
  float right
  width 100%
  background alpha(#fff, .1)
  content:""

section:before
  border-top alpha(#fff, .2) solid 1px

section:after
  border-bottom alpha(#fff, .2) solid 1px

figure
  //margin-right $gx
  // margin-bottom $gy
  //margin-left $gxE
  float left
  background alpha(#fff, .2)
  //border alpha(#fff, .15) solid 2px
  text-align center
  //padding .25rem 0
  //border-radius .15rem
  width 100%
  // &:last-child
  //   margin-bottom 0

.mr0
  margin-right 0





//////////////////////////////////////////////////////////////////////
// Meat
/////////////////////////////////////////////////////////////////////
.container
  padding:0;
  display:block;
  //background-color:$container_bg;

  section .site-width:before
  section .site-width:after
    height $sy
    float:left
    width:100%
    content:""


  section:before
    //border-top 0px solid #ccc
    //border-bottom: 1px solid #fff;
    //height 1px
    display block
    content ""


  //section .site-width{background:rgba(0,0,0, 1) !important; }
  //section .site-width:before{background:rgba(0,0,0, .3) !important; float:left;}
  section:nth-child(1):before
    width 100% !important

  section:nth-child(2):before
    width:100% !important

  //section:first-child:before, section:first-child:after{height:0;}
  //section:last-child .site-width:after{margin-top:$cols1 !important;}

  .site-width
    margin:$spacer/8 0
    background #f5f5f5
    background-color #444

  .copy-width
    background #666



//#meat:first-child section:first-child:after{width:100% !important}

.container:after
footer:after
     visibility hidden
     display block
     font-size 0
     content ""
     clear both
     height 0



/////////////////////////////////
// ZONE COLORS
/////////////////////////////////
$zone-a-color = #00bcd4
$zone-b-color = #5677fc
$zone-c-color = #ffc107
$zone-d-color = #a6e22a
$zone-e-color = #e0276f
$zone-f-color = #10e277






//////////////////////////////////////////////////////////////////////
// Deve Zone Styles
/////////////////////////////////////////////////////////////////////
.poxy-dev span
  font-size .8em
  padding $s4
  float left
  width $cols1
  height $cols1
  //background $zone-e-color

  +zone(E)
    background $zone-e-color
    color #fff

  +zone(D)
    background $zone-d-color
    color #fff

  +zone(C)
    background $zone-c-color
    color #fff

  +zone(B)
    background $zone-b-color
    color #000

  +zone(A)
    background $zone-a-color
    color #000

  &:before
    +zone(E)
      content 'E '
    +zone(D)
      content 'D '
    +zone(C)
      content 'C '
    +zone(B)
      content 'B '
    +zone(A)
      content 'A '


.poxy_dev li:first-child a
  line-height 2em

.poxy_dev li:first-child a:before
  font-family sans-serif
  font-size 55%
  letter-spacing .12em
  position absolute
  text-transform uppercase
  top 40%

figure
  +zone(E)
    background $zone-e-color
    color #fff

  +zone(D)
    background $zone-d-color
    color #fff

  +zone(C)
    background $zone-c-color
    color #fff

  +zone(B)
    background $zone-b-color
    color #000

  +zone(A)
    background $zone-a-color
    color #000
